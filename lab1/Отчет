Задание 1
Напишите сложную функцию, используя композиции функций CAR и CDR, которая
возвращает атом * при применении к следующему списку:
(1 (((2 3) (4 5) *) (6)))

Ответ
(print (car(cdr(cdr(car(car(cdr '(1 (((2 3) (4 5) *) (6))))))))))
Выводит
Атом '*'
-------------------------------
Задание 2
Объясните работу функций:
2) (list '(a b) 7 '(())) 

Ответ:
(print  (list '(a b) 7 '(())) )
Выводит
((A B) 7 (NIL))

Объяснение:
Функция (list '(a b) 7 '(())) в языке программирования Lisp создает список из указанных элементов. Давайте разберем, как это работает:

'(a b) — это литерал списка, который содержит два символа: a и b. Знак апостроф (') обозначает, что это именно список, а не выражение, которое нужно вычислить.

7 — это просто число, которое будет добавлено в создаваемый список.

'(())) — это тоже литерал списка, который содержит один элемент: пустой список. Двойные скобки означают, что внутри списка есть еще один список, который в данном случае пустой.

Теперь, когда мы объединим все эти элементы с помощью функции list, получится новый список:

(list '(a b) 7 '(()))
Этот вызов функции вернет следующий результат:

((A B) 7 ())
Таким образом, итоговый список содержит три элемента: список (A B), число 7 и пустой список (). 
-------------------------------
Задание 3
Из атомов 1, 2, 3, nil создайте указанные списки двумя способами:
а) с помощью композиций функций CONS;
б) с помощью композиций функций LIST.
2) (1 (2) 3)

Ответ:
(cons 1 (cons (cons 2 nil) (cons 3 nil)))
(list 1 (list 2) 3)

